from typing import Any, Optional, Callable

class FieldABC:
    parent: Any = ...
    name: Any = ...
    def serialize(self, attr: Any, obj: Any, accessor: Optional[Callable[[Any, str, Any], Any]] = ...) -> None: ...
    def deserialize(self, value: Any) -> None: ...

class SchemaABC:
    def dump(self, obj: Any, *, many: bool=...) -> Any: ...
    def dumps(self, obj: Any, *, many: bool=...) -> Any: ...
    def load(self, data: Any, *, many: bool=..., partial: Any=..., unknown: Any=...) -> Any: ...
    def loads(self, json_data: Any, *, many: bool=..., partial: Any=..., unknown: Any=..., **kwargs: Any) -> Any: ...
